buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        // Android Gradle plugin.
        classpath 'com.android.tools.build:gradle:1.3.1'
        // Android Maven plugin.
        classpath 'com.github.dcendents:android-maven-plugin:1.2'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'

version = '0.1.3'

ext {
    bintrayRepo = 'maven'
    bintrayName = 'ledge_retrofit'
    bintrayOrg = 'itabulous'

    publishedGroupId = 'ledge.link.sdk'
    libraryName = 'Retrofit'
    artifact = 'retrofit'

    libraryDescription = 'A wrapper for retrofit'

    siteUrl = 'https://github.com/itabulous/sdk_android'
    gitUrl = 'https://github.com/itabulous/sdk_android.git'

    libraryVersion = '0.1'

    developerId = 'adrian-ledge'
    developerName = 'Adrian Tung'
    developerEmail = 'adrian@ledge.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

android {
    compileSdkVersion androidCompileSdkVersion.toInteger()
    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        minSdkVersion androidMinSdkVersion.toInteger()
        targetSdkVersion androidTargetSdkVersion.toInteger()

        versionCode = androidVersionCode
        versionName = androidVersionName
    }
}

repositories {
    // Temporary solution until libs are published.
    maven {
        url "${HOME}/.m2/repository/"
    }
    jcenter()
}

dependencies {
    compile 'me.ledge.link.sdk:api:0.1.4'
    compile 'com.squareup.retrofit2:retrofit:2.2.0'
    compile 'com.squareup.retrofit2:converter-gson:2.2.0'
}
