buildscript {
    repositories {
        jcenter()
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply from: '../javadoc.gradle'
apply from: '../jacoco.gradle'
apply plugin: 'me.tatarka.retrolambda'

version = '0.1.21'

ext {
    bintrayRepo = 'maven'
    bintrayName = 'android-sdk-ui'
    bintrayOrg = 'itabulous'

    publishedGroupId = 'ledge.link.sdk'
    libraryName = 'UI'
    artifact = 'ui'

    libraryDescription = 'An easy to use and flexible SDK for Ledge Link'

    siteUrl = 'https://github.com/itabulous/sdk_android'
    gitUrl = 'https://github.com/itabulous/sdk_android.git'

    libraryVersion = '0.1'

    developerId = 'adrian-ledge'
    developerName = 'Adrian Tung'
    developerEmail = 'adrian@ledge.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

android {
    compileSdkVersion androidCompileSdkVersion.toInteger()
    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        minSdkVersion androidMinSdkVersion.toInteger()
        targetSdkVersion androidTargetSdkVersion.toInteger()

        versionCode = androidVersionCode
        versionName = androidVersionName

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    sourceSets {
        test {
            java.srcDirs = ['../sdk/src/test/java', 'src/test/java'];
        }
    }

    testOptions {
        unitTests {
            returnDefaultValues = true

            all {
                include "**/*Test.class"
                exclude '**/me/ledge/link/sdk/sdk/*'
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
    }
}

repositories {
    jcenter()

    // Temporary solution until libs are published.
    maven {
        url "${HOME}/.m2/repository/"
    }
    maven {
        url 'https://jitpack.io'
    }
    mavenCentral()
}

dependencies {
    // Ledge Libraries
    compile 'me.ledge.link.sdk:sdk:0.1.20'
    compile 'me.ledge.common:common:+'
    // 3rd Party Libraries
    compile('com.android.support:support-v13:24.0.0') {
        exclude module: 'support-annotations'
    }
    compile('com.android.support:appcompat-v7:24.0.0') {
        exclude module: 'support-v4'
    }
    compile('com.android.support:design:24.0.0') {
        exclude module: 'support-v4'
    }
    compile('com.android.support:cardview-v7:24.0.0') {
        exclude module: 'support-v4'
    }
    compile('com.android.support:recyclerview-v7:24.0.0') {
        exclude module: 'support-v4'
    }
    compile('org.adw.library:discrete-seekbar:+') {
        exclude module: 'support-v4'
    }
    compile 'com.android.volley:volley:1.+'
    compile 'com.google.android.gms:play-services-auth:11.4.2'
    compile 'ru.lanwen.verbalregex:java-verbal-expressions:1.4'
    compile 'com.googlecode.libphonenumber:libphonenumber:8.3.1'
    compile 'com.github.ksoichiro:android-observablescrollview:1.6.0'
    compile('com.github.davidpizarro:pinview:1.0.0') {
        exclude module: 'appcompat-v7'
    }
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.github.dbachelder:CreditCardEntry:1.4.7'
    compile 'com.github.vinaygaba:creditcardview:v1.0.3'
    compile 'io.card:android-sdk:5.4.1'
    compile 'com.github.verygoodsecurity:vgs-android-sdk:e6372c5002'
    compile 'net.sourceforge.streamsupport:streamsupport-cfuture:1.5.3'
    compile 'com.synnapps:carouselview:0.0.10'
    compile 'com.github.tiagohm.MarkdownView:library:0.17.0'
    compile 'com.github.barteksc:android-pdf-viewer:2.8.0'
    compile('com.coinbase.android:coinbase-android-sdk:1.0.1') {
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    compile 'com.venmo.android.pin:library:1.2.0@aar'

    // Tests
    testCompile 'junit:junit:4.12'
    testCompile 'org.robolectric:robolectric:3.1.2'
    testCompile 'org.powermock:powermock-api-mockito:1.6.6'
    testCompile 'org.powermock:powermock-module-junit4-rule-agent:1.6.6'
    testCompile 'org.powermock:powermock-module-junit4-rule:1.6.6'
    testCompile 'org.powermock:powermock-module-junit4:1.6.6'
}

// Lame Robolectric testing hacks...
// See https://github.com/robolectric/robolectric/issues/1796#issuecomment-101362218
afterEvaluate { project ->
    android.libraryVariants.each { variant ->
        // workaround for missing R class for aar dependencies
        tasks.getByName("assemble${variant.name.capitalize()}").dependsOn copyAppcompat
    }
}

task copyAppcompat(type: Copy) {
    def projectPackage = "me/ledge/link/sdk/ui"

    from "build/generated/source/r/debug/${projectPackage}".replace("/", File.separator)
    into 'src/test/java/android/support/v7/appcompat'.replace("/", File.separator)
    include 'R.java'

    filter { line ->
        line.contains("package ${projectPackage.replace("/", ".")};") ? 'package android.support.v7.appcompat;' : line
    }
}
