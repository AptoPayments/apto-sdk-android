buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        // Coveralls
        // Using fixed version, see https://github.com/kt3k/coveralls-gradle-plugin/issues/47
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.5.0-x'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.github.kt3k.coveralls'
apply from: '../javadoc.gradle'
apply from: '../jacoco.gradle'

android {
    compileSdkVersion androidCompileSdkVersion.toInteger()
    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        minSdkVersion androidMinSdkVersion.toInteger()
        targetSdkVersion androidTargetSdkVersion.toInteger()

        versionCode = androidVersionCode
        versionName = androidVersionName

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    sourceSets {
        test {
            java.srcDirs = ['../sdk/src/test/java', 'src/test/java'];
        }
    }

    testOptions {
        unitTests {
            returnDefaultValues = true

            all {
                include "**/*Test.class"
                exclude '**/me/ledge/link/sdk/sdk/*'
            }
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
    }
}

repositories {
    jcenter()

    // Temporary solution until libs are published.
    maven {
        url "${HOME}/.m2/repository/"
    }
}

dependencies {
    // Ledge Libraries
    compile 'me.ledge.link.sdk:sdk:+'
    compile 'me.ledge.common:common:+'

    // 3rd Party Libraries
    compile ('com.android.support:support-v13:24.0.0') {
        exclude module: 'support-annotations'
    }
    compile ('com.android.support:appcompat-v7:24.0.0') {
        exclude module: 'support-v4'
    }
    compile ('com.android.support:design:24.0.0') {
        exclude module: 'support-v4'
    }
    compile ('com.android.support:cardview-v7:24.0.0') {
        exclude module: 'support-v4'
    }
    compile ('com.android.support:recyclerview-v7:24.0.0') {
        exclude module: 'support-v4'
    }
    compile ('org.adw.library:discrete-seekbar:+') {
        exclude module: 'support-v4'
    }
    compile 'ru.lanwen.verbalregex:java-verbal-expressions:+'
    compile 'com.googlecode.libphonenumber:libphonenumber:+'
    compile 'com.github.ksoichiro:android-observablescrollview:+'
    compile ('com.github.davidpizarro:pinview:1.0.0') {
        exclude module: 'appcompat-v7'
    }
    compile 'org.greenrobot:eventbus:+'

    // Tests
    testCompile 'junit:junit:4.+'
    testCompile 'org.robolectric:robolectric:3.1'
    testCompile 'org.powermock:powermock-api-mockito:+'
    testCompile 'org.powermock:powermock-module-junit4-rule-agent:+'
    testCompile 'org.powermock:powermock-module-junit4-rule:+'
    testCompile 'org.powermock:powermock-module-junit4:+'
}

// Lame Robolectric testing hacks...
// See https://github.com/robolectric/robolectric/issues/1796#issuecomment-101362218
afterEvaluate { project ->
    android.libraryVariants.each { variant ->
        // workaround for missing R class for aar dependencies
        tasks.getByName("assemble${variant.name.capitalize()}").dependsOn copyAppcompat
    }
}

task copyAppcompat(type: Copy) {
    def projectPackage = "me/ledge/link/sdk/ui"

    from "build/generated/source/r/debug/${projectPackage}".replace("/", File.separator)
    into 'src/test/java/android/support/v7/appcompat'.replace("/", File.separator)
    include 'R.java'

    filter { line ->
        line.contains("package ${projectPackage.replace("/", ".")};") ? 'package android.support.v7.appcompat;' : line
    }
}
